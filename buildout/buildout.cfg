[buildout]
extends =
		 versions.cfg
		 pillow.cfg

update-versions-file = versions.cfg
show-picked-versions = true
# python_ldap and related can move.
parts =
		cython
		lxml
		pillow
		pip
		stats
#		scipy
#		ggplot
		eggs
		checkversions
# Using 'true' causes issues with file templates and extra Z3C_RECIPE_FILETEMPLATE_BASE
# not being interpreted
relative-paths = false

# By default, buildout checks for
# updated eggs when the requirements
# specify no version or >=. This can
# be fairly slow if most requirements are
# unpinned. Setting newest to false
# makes this not happen. The command line
# arg -n can make it happen again
newest = false

# We manage our checkouts using mr.developer, which
# easily allows pinning versions (revision=XXX)
# and provides the 'develop' command with many
# useful actions (like 'rebuild)
# See https://pypi.python.org/pypi/mr.developer/
extensions = mr.developer
mr.developer-threads = 35
sources-dir = sources
auto-checkout = *
# always-checkout =
# This defaults to false. If it's true, then all packages specified by
# auto-checkout and currently in develop mode are updated during each
# buildout run. If set to force, then packages are updated even when
# they are dirty instead of asking interactively.

[base-sources]

# Recipes
z3c.recipe.filetemplate = git https://github.com/NextThought/z3c.recipe.filetemplate.git
nti.recipes.zcml = svn https://repos.nextthought.com/svn/nti-svn/nti.recipes.zcml/trunk${server-versions:All}
nti.recipes.zodb = svn https://repos.nextthought.com/svn/nti-svn/nti.recipes.zodb/trunk${server-versions:All}
nti.recipes.passwords = svn https://repos.nextthought.com/svn/nti-svn/nti.recipes.passwords/trunk${server-versions:All}

# reference
nti.common = svn https://repos.nextthought.com/svn/nti-svn/nti.common/trunk${server-versions:All}
nti.property = svn https://repos.nextthought.com/svn/nti-svn/nti.property/trunk${server-versions:All}
nti.ntiids = svn https://repos.nextthought.com/svn/nti-svn/nti.ntiids/trunk${server-versions:All}

# analytics
nti.analytics_pandas = svn https://repos.nextthought.com/svn/nti-svn/nti.analytics_pandas/trunk${server-versions:All}
nti.analytics_database = svn https://repos.nextthought.com/svn/nti-svn/nti.analytics_database/trunk${server-versions:All}

[server-versions]
# This section can be used to define version pins
# for mr.developer. Currently, we define one version
# pin for all components, as that's the safest way to be sure
# we have a matching set of components that work together.
# We also only define a version pin for the SVN repository,
# as the git components are non-critical (not used at runtime)
# or slow-changinge
All =

[dataserver-sources]

[extra-sources]

[sources]
<= base-sources
   extra-sources

[pip]
recipe = zc.recipe.egg
eggs =
   	 pip
	 
[cython]
recipe = zc.recipe.egg
eggs =
	 cython

[stats]
recipe = zc.recipe.egg
eggs =
	 pbr
	 mock
	 pytz
	 numpy
	 patsy
	 pandas
	 funcsigs
	 pyparsing
	 brewer2mpl
	 matplotlib
	 python-dateutil
	
[scipy]
recipe = collective.recipe.cmd
on_install = true
cmds =${buildout:directory}/bin/pip install scipy

[deployment]
root-directory = ${buildout:directory}

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml==3.6.4
libxml2-url = http://xmlsoft.org/sources/libxml2-2.9.2.tar.gz
libxslt-url = http://xmlsoft.org/sources/libxslt-1.1.28.tar.gz

[eggs]
recipe = zc.recipe.egg
analytics_pandas_egg = nti.analytics_pandas[tools,test]
eggs =
	 cython
	 pillow
	 pip
	 nose2
	 nose2-cov
	 zope.testrunner
	 nti.analytics_pandas
	 nti.nose_traceback_info
	 nti.recipes.zcml
	 nti.testing
	 ${:analytics_pandas_egg}
	 
interpreter = python
dependent-scripts = true

initialization =
			   import os
			   os.environ['CHAMELEON_CACHE'] = "/tmp"

[translations]
# Update the message catalogs as appropriate
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = for d in sources/*; do echo $d; test -f $d/babel.cfg && (cd $d && python ./setup.py extract_messages && python ./setup.py update_catalog && python ./setup.py compile_catalog); done

[ropeproject]
recipe = collective.recipe.ropeproject
eggs = ${eggs:eggs}

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[clean-pyc]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = find ${buildout:sources-dir} -name "*.py[co]" -delete

[omelette]
recipe = collective.recipe.omelette
eggs = ${eggs:eggs}
